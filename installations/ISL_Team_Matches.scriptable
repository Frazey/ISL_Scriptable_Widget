{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "deep-blue",
    "glyph" : "futbol"
  },
  "name" : "ISL_Team_Matches",
  "script" : "const teamJson = {\"ATKMB\": \"ATK MOHUN BAGAN\", \"BFC\": \"BENGALURU FC\", \"CFC\": \"CHENNAIYIN FC\", \"FCG\": \"FC GOA\", \"HFC\": \"HYDERABAD FC\", \"JFC\": \"JAMSHEDPUR FC\", \"KBFC\": \"KERALA BLASTERS FC\", \"MCFC\": \"MUMBAI CITY FC\", \"NEUFC\": \"NORTHEAST UNITED FC\", \"OFC\": \"ODISHA FC\", \"SCEB\": \"SC EAST BENGAL\"}\nconst widgetParameter = args.widgetParameter ? args.widgetParameter.toUpperCase() : \"KBFC\"\nwidgetSettings = {\n    teamList: [\"ATKMB\", \"BFC\", \"CFC\", \"FCG\", \"HFC\", \"JFC\", \"KBFC\", \"MCFC\", \"NEUFC\", \"OFC\", \"SCEB\"],\n    teamFullName: teamJson[widgetParameter],\n\n    \/\/Customise Below:\n    teamName: widgetParameter, \/\/ Customise in widget Parameter\n    dateStyle: \"date\", \/\/ Date Style: \"countdown\" or \"date\"\n    updateAfter: 24, \/\/ Update widget after 24 hours after end of match (to get more time to see score before showing next match details)\n    \/\/------------------\/\/\n\n    placeholderImage: \"default.png\",\n\n    backgroundColor: {\n        light: \"#ffffff\",\n        dark: \"#141414\"\n    },\n    leagueTitleColor: {\n        light: \"#d6001c\",\n        dark: \"#d6001c\"\n    },\n    highlightedRowColor: {\n        light: \"#e5e6ea\",\n        dark: \"#2d2d2e\"\n    }\n}\n\n\nlet fm = FileManager.local();\nconst iCloudUsed = fm.isFileStoredIniCloud(module.filename);\nfm = iCloudUsed ? FileManager.iCloud() : fm;\nconst widgetFolder = \"IndianSuperLeague\";\nconst offlinePath = fm.joinPath(fm.documentsDirectory(), widgetFolder);\nif (!fm.fileExists(offlinePath)) fm.createDirectory(offlinePath);\n\n\nif (config.runsInWidget) {\n    let widget = await createWidget();\n    Script.setWidget(widget);\n    Script.complete();\n} else {\n    let widget = await createWidget();\n    Script.complete();\n    await widget.presentSmall();\n}\n\nasync function createWidget() {\n    const matches = await getMatches()\n    let date = new Date()\n\n    let paddingLeft = 0;\n    let paddingRight = 0;\n    let paddingTop = 2;\n    let paddingBottom = 2;\n\n    let widget = new ListWidget();\n    widget.backgroundColor = Color.dynamic(new Color(widgetSettings.backgroundColor.light), new Color(widgetSettings.backgroundColor.dark));\n    widget.setPadding(paddingTop, paddingLeft, paddingBottom, paddingRight);\n\n    const stack = widget.addStack();\n    const leagueStack = stack.addStack();\n    leagueStack.layoutVertically();\n    leagueStack.addSpacer(2.5);\n\n    const leagueTitleStack = leagueStack.addStack();\n    leagueTitleStack.addSpacer()\n    leagueTitleStack.centerAlignContent()\n    leagueTitleStack.addSpacer(2);\n    addFormattedText(leagueTitleStack, widgetSettings.teamFullName, Font.semiboldSystemFont(11), Color.dynamic(new Color(widgetSettings.leagueTitleColor.light), new Color(widgetSettings.leagueTitleColor.dark)), 1, false);\n    leagueTitleStack.addSpacer()\n    leagueStack.addSpacer(3);\n    \n    const hSpacing = 28;\n    const vSpacing = 28;\n    const leagueTableStack = leagueStack.addStack();\n    leagueTableStack.layoutVertically();\n\n\n    for (let i = 0; i < 3; i += 1) {\n        let leagueTableRowStack = leagueTableStack.addStack();\n        leagueTableRowStack.addSpacer()\n        let leagueDateStack = leagueTableStack.addStack();\n        leagueDateStack.addSpacer()\n        let matchDate = new Date(matches[i].start_date)\n\n        for (let j = 0; j < 3; j += 1) {\n            let cellDataStack = leagueTableRowStack.addStack();\n            \n            if(j == 0) {\n                cellDataStack.size = new Size(26, vSpacing);\n                cellDataStack.centerAlignContent();\n                let teamBadgeUrl = encodeURI(`https:\/\/www.indiansuperleague.com\/static-resources\/images\/clubs\/small\/${matches[i].participants[0].id}.png`);\n                let teamBadgeOffline = matches[i].participants[0].short_name;\n                let teamBadgeValue = await getImage(teamBadgeUrl, teamBadgeOffline);\n                let teamBadgeImage = cellDataStack.addImage(teamBadgeValue);\n                teamBadgeImage.imageSize = new Size(24, 24);\n            }else if(j == 1){\n                cellDataStack.size = new Size(42, vSpacing);\n                cellDataStack.centerAlignContent();\n                let cellDataValue = `${matches[i].participants[0].value} - ${matches[i].participants[1].value}`;\n                addFormattedText(cellDataStack, cellDataValue, Font.semiboldSystemFont(18), null, 1, true);\n            }else if(j == 2){\n                cellDataStack.size = new Size(hSpacing, vSpacing);\n                cellDataStack.centerAlignContent();\n                let teamBadgeUrl = encodeURI(`https:\/\/www.indiansuperleague.com\/static-resources\/images\/clubs\/small\/${matches[i].participants[1].id}.png`);\n                let teamBadgeOffline = matches[i].participants[1].short_name;\n                let teamBadgeValue = await getImage(teamBadgeUrl, teamBadgeOffline);\n                let teamBadgeImage = cellDataStack.addImage(teamBadgeValue);\n                teamBadgeImage.imageSize = new Size(24, 24);\n            }\n            leagueTableRowStack.addSpacer()\n      }\n      leagueDateStack.centerAlignContent();\n      if(matches[i].event_status == \"Yet to begin\"){\n          let dateText = leagueDateStack.addDate(matchDate)\n          dateText.font = Font.semiboldSystemFont(9)\n          dateText.centerAlignText()\n          if (widgetSettings.dateStyle == \"date\"){\n              dateText.applyDateStyle()\n          }else{\n              dateText.applyRelativeStyle()\n          }\n      }else if(matches[i].event_status == \"Match Completed\"){\n          addFormattedText(leagueDateStack, \"Match Completed\", Font.semiboldSystemFont(9), null, 1, false);\n      }else{\n          addFormattedText(leagueDateStack, `${matches[i].event_status} | ${matches[i].event_sub_status}`, Font.semiboldSystemFont(9), null, 1, false);\n      }\n      \n      leagueDateStack.addSpacer()\n      leagueTableStack.addSpacer(3)\n    }\n    return widget\n}\n\nasync function getMatches(){\n    let matches, matchesJson\n    let currentTime = new Date()\n    currentTime.setHours(currentTime.getHours() - widgetSettings.updateAfter)\n    let fileName = \"isl_full_matches.json\"\n    let url = \"https:\/\/www.indiansuperleague.com\/feeds-schedule\/?methodtype=3&client=8&sport=2&league=0&timezone=0530&language=en&tournament=india_sl_2021\"\n    try{\n        let req = new Request(url);\n        matchesJson = await req.loadJSON();\n        matches = matchesJson.matches\n        fm.writeString(fm.joinPath(offlinePath, fileName), JSON.stringify(matches));\n    }catch (err){\n        matches = JSON.parse(fm.readString(fm.joinPath(offlinePath, fileName)));\n    }finally{\n        matches = matches.filter(a => (a.participants[0].short_name == widgetSettings.teamName || a.participants[1].short_name == widgetSettings.teamName) && new Date(a.end_date) >= currentTime);\n        return matches;\n    }\n}\n\n\nfunction addFormattedText(stack, string, font, textColor, lineLimit, center) {\n    const text = stack.addText(string);\n    text.font = font;\n    if (lineLimit) text.lineLimit = lineLimit;\n    if (textColor) text.textColor = textColor;\n    if (center) text.centerAlignText();\n}\n\n\nasync function getImage(url, teamName) {\n    let image;\n    let teamLogoPath = fm.joinPath(offlinePath, teamName);\n    if (fm.fileExists(teamLogoPath)){\n        if (iCloudUsed) await fm.downloadFileFromiCloud(teamLogoPath);\n        image = fm.readImage(teamLogoPath);\n    }else{\n        try{\n            image = await new Request(url).loadImage();\n            fm.writeImage(fm.joinPath(offlinePath, teamName), image);\n\n        } catch (err){\n            let symbol = SFSymbol.named(\"shield.fill\")\n            image = symbol.image\n        }\n    }\n    return image\n}",
  "share_sheet_inputs" : [

  ]
}