{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "deep-blue",
    "glyph" : "futbol"
  },
  "name" : "ISL_Next_Match",
  "script" : "const widgetParameter = args.widgetParameter ? args.widgetParameter.toUpperCase() : \"KBFC\"\nwidgetSettings = {\n    teamList: [\"ATKMB\", \"BFC\", \"CFC\", \"FCG\", \"HFC\", \"JFC\", \"KBFC\", \"MCFC\", \"NEUFC\", \"OFC\", \"SCEB\"],\n    teamName: widgetParameter,\n    \n    \/\/Customize Below:\n    dateStyle: \"d\", \/\/ Date Style: \"countdown\" or \"date\" (date = Novemeber 19, 2021 and countdown = 7 days, 4 hrs)\n    updateAfter: 35, \/\/ Update widget after 15 minutes at end of match (to get more time to see score before showing next match details)\n    \/\/-----------------\/\/\n\n    placeholderImage: \"default.png\",\n\n    backgroundColor: {\n        light: \"#ffffff\",\n        dark: \"#141414\"\n    },\n    leagueTitleColor: {\n        light: \"#d6001c\",\n        dark: \"#d6001c\"\n    },\n    highlightedRowColor: {\n        light: \"#e5e6ea\",\n        dark: \"#2d2d2e\"\n    }\n}\n\nlet fm = FileManager.local();\nconst iCloudUsed = fm.isFileStoredIniCloud(module.filename);\nfm = iCloudUsed ? FileManager.iCloud() : fm;\nconst widgetFolder = \"IndianSuperLeague\";\nconst offlinePath = fm.joinPath(fm.documentsDirectory(), widgetFolder);\nif (!fm.fileExists(offlinePath)) fm.createDirectory(offlinePath);\n\n\nif (config.runsInWidget) {\n    let widget = await createWidget();\n    Script.setWidget(widget);\n    Script.complete();\n} else {\n    let widget = await createWidget();\n    Script.complete();\n    await widget.presentSmall();\n}\n\n\nasync function createWidget() {\n    const matches = await getMatches()\n    let matchDate = new Date(matches[0].start_date)\n    let matchEndDate = new Date(matches[0].end_date)\n    let homeTeam = matches[0].participants[0].short_name\n    let homeTeamId = matches[0].participants[0].id\n    let homeTeamScore = matches[0].participants[0].value\n    let awayTeam = matches[0].participants[1].short_name\n    let awayTeamId = matches[0].participants[1].id\n    let awayTeamScore = matches[0].participants[1].value\n\n    let paddingLeft = 0;\n    let paddingRight = 0;\n    let paddingTop = 12;\n    let paddingBottom = 12;\n\n    let widget = new ListWidget();\n    widget.backgroundColor = Color.dynamic(new Color(widgetSettings.backgroundColor.light), new Color(widgetSettings.backgroundColor.dark));\n    widget.setPadding(paddingTop, paddingLeft, paddingBottom, paddingRight);\n\n    const stack = widget.addStack();\n    const leagueStack = stack.addStack();\n    leagueStack.layoutVertically()\n    leagueStack.addSpacer();\n\n    const leagueTitleStack = leagueStack.addStack();\n    leagueTitleStack.addSpacer();\n    addFormattedText(leagueTitleStack, \"INDIAN SUPER LEAGUE\", Font.semiboldSystemFont(11), Color.dynamic(new Color(widgetSettings.leagueTitleColor.light), new Color(widgetSettings.leagueTitleColor.dark)), 1, false);\n    leagueTitleStack.addSpacer()\n    leagueStack.addSpacer(14);\n\n\n    let topStack = leagueStack.addStack()\n    topStack.centerAlignContent()\n    topStack.layoutHorizontally()\n    topStack.addSpacer()\n\n    let logoLeftStack = topStack.addStack()\n    let teamBadgeUrlLeft = encodeURI(`https:\/\/www.indiansuperleague.com\/static-resources\/images\/clubs\/small\/${homeTeamId}.png`);\n    let teamBadgeOfflineLeft = homeTeam;\n    let teamBadgeValueLeft = await getImage(teamBadgeUrlLeft, teamBadgeOfflineLeft);\n    let teamBadgeImageLeft = logoLeftStack.addImage(teamBadgeValueLeft);\n    teamBadgeImageLeft.imageSize = new Size(48, 48);\n    topStack.addSpacer()\n\n    let vsStack = topStack.addStack()\n    let vsText = vsStack.addText('vs')\n    vsText.font = Font.regularSystemFont(18)\n    topStack.addSpacer()\n    \n    let logoRightStack = topStack.addStack()\n    let teamBadgeUrlRight = encodeURI(`https:\/\/www.indiansuperleague.com\/static-resources\/images\/clubs\/small\/${awayTeamId}.png`);\n    let teamBadgeOfflineRight = awayTeam;\n    let teamBadgeValueRight = await getImage(teamBadgeUrlRight, teamBadgeOfflineRight);\n    let teamBadgeImageRight = logoRightStack.addImage(teamBadgeValueRight);\n    teamBadgeImageRight.imageSize = new Size(48, 48);\n    topStack.addSpacer()\n    leagueStack.addSpacer(2)\n    \n\n    let midStack = leagueStack.addStack()\n    midStack.centerAlignContent()\n    midStack.layoutHorizontally()\n    midStack.addSpacer()\n\n    let scoreStackLeft = midStack.addStack()\n    let scoreTextLeft = scoreStackLeft.addText(`${homeTeamScore}`)\n    scoreTextLeft.font = Font.semiboldSystemFont(28)\n    midStack.addSpacer()\n\n    let midBlankStack = midStack.addStack()\n    midBlankStack.addSpacer(4)\n    let midText = midBlankStack.addText(\"  \")\n    midText.font = Font.regularSystemFont(18)\n    midBlankStack.addSpacer(4)\n    midStack.addSpacer()\n\n    let scoreStackRight = midStack.addStack()\n    let scoreTextRight = scoreStackRight.addText(`${awayTeamScore}`)\n    scoreTextRight.font = Font.semiboldSystemFont(28)\n    midStack.addSpacer()\n    leagueStack.addSpacer(2)\n\n\n    const dateStack = leagueStack.addStack();\n    dateStack.centerAlignContent();\n    dateStack.addSpacer();\n\n    if(matches[0].event_status == \"Yet to begin\"){\n        let dateText = dateStack.addDate(matchDate)\n        dateText.font = Font.semiboldSystemFont(9)\n        dateText.centerAlignText()\n        if (widgetSettings.dateStyle == \"date\"){\n            dateText.applyDateStyle()\n        }else{\n            dateText.applyRelativeStyle()\n        }\n    }else if(matches[0].event_status == \"Match Completed\"){\n        addFormattedText(dateStack, \"Match Completed\", Font.semiboldSystemFont(9), null, 1, false);\n    }else{\n        addFormattedText(dateStack, `${matches[0].event_status} | ${matches[0].event_sub_status}`, Font.semiboldSystemFont(9), null, 1, false);\n    }\n    dateStack.addSpacer()\n    leagueStack.addSpacer();\n\n\n    return widget\n}\n\n\nasync function getMatches(){\n    let matches, matchesJson\n    let currentTime = new Date()\n    currentTime.setMinutes(currentTime.getMinutes() - widgetSettings.updateAfter)\n    let fileName = \"isl_full_matches.json\"\n    let url = \"https:\/\/www.indiansuperleague.com\/feeds-schedule\/?methodtype=3&client=8&sport=2&league=0&timezone=0530&language=en&tournament=india_sl_2021\"\n    try{\n        let req = new Request(url);\n        matchesJson = await req.loadJSON();\n        matches = matchesJson.matches\n        fm.writeString(fm.joinPath(offlinePath, fileName), JSON.stringify(matches));\n    }catch (err){\n        matches = JSON.parse(fm.readString(fm.joinPath(offlinePath, fileName)));\n    }finally{\n        matches = matches.filter(a => new Date(a.end_date) >= currentTime);\n        return matches;\n    }\n}\n\n\nfunction addFormattedText(stack, string, font, textColor, lineLimit, center) {\n    const text = stack.addText(string);\n    text.font = font;\n    if (lineLimit) text.lineLimit = lineLimit;\n    if (textColor) text.textColor = textColor;\n    if (center) text.centerAlignText();\n}\n\n\nasync function getImage(url, teamName) {\n    let image;\n    let teamLogoPath = fm.joinPath(offlinePath, teamName);\n    if (fm.fileExists(teamLogoPath)){\n        if (iCloudUsed) await fm.downloadFileFromiCloud(teamLogoPath);\n        image = fm.readImage(teamLogoPath);\n    }else{\n        try{\n            image = await new Request(url).loadImage();\n            fm.writeImage(fm.joinPath(offlinePath, teamName), image);\n\n        } catch (err){\n            let symbol = SFSymbol.named(\"shield.fill\")\n            image = symbol.image\n        }\n    }\n    return image\n}",
  "share_sheet_inputs" : [

  ]
}